---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";

// Icons from Icones.js.org, Phosphor, Bold
export const menuItems = [
  {
    label: "Veranstaltungen",
    slug: "/veranstaltungen",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256"><path fill="currentColor" d="M208 28h-20v-4a12 12 0 0 0-24 0v4H92v-4a12 12 0 0 0-24 0v4H48a20 20 0 0 0-20 20v160a20 20 0 0 0 20 20h160a20 20 0 0 0 20-20V48a20 20 0 0 0-20-20ZM68 52a12 12 0 0 0 24 0h72a12 12 0 0 0 24 0h16v24H52V52ZM52 204V100h152v104Z"/></svg>`,
  },
  {
    label: "Mitglieder",
    slug: "/mitglieder",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256"><path fill="currentColor" d="M125.18 156.94a64 64 0 1 0-82.36 0a100.23 100.23 0 0 0-39.49 32a12 12 0 0 0 19.35 14.2a76 76 0 0 1 122.64 0a12 12 0 0 0 19.36-14.2a100.33 100.33 0 0 0-39.5-32ZM44 108a40 40 0 1 1 40 40a40 40 0 0 1-40-40Zm206.1 97.67a12 12 0 0 1-16.78-2.57A76.31 76.31 0 0 0 172 172a12 12 0 0 1 0-24a40 40 0 1 0-14.85-77.16a12 12 0 1 1-8.92-22.28a64 64 0 0 1 65 108.38a100.23 100.23 0 0 1 39.49 32a12 12 0 0 1-2.62 16.73Z"/></svg>`,
  },
  {
    label: "Sportheim",
    slug: "/sportheim",
    icon: `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 256 256"><path fill="currentColor" d="M240 204h-12v-88.45a20.07 20.07 0 0 0-6.44-14.7l-79.95-75.47l-.16-.15a19.93 19.93 0 0 0-26.91 0l-.17.15l-79.93 75.47a20.07 20.07 0 0 0-6.44 14.7V204H16a12 12 0 0 0 0 24h224a12 12 0 0 0 0-24ZM52 117.28l76-71.75l76 71.75V204h-40v-44a20 20 0 0 0-20-20h-32a20 20 0 0 0-20 20v44H52ZM140 204h-24v-40h24Z"/></svg>`,
  },
];

const isMaintenanceMode = true;
---

<header>
  <div class="wrapper text-gray-700">
    <a href="/" title={SITE_TITLE}>
      <img width="68" height="61" src="/assets/logo_sco.png" alt="SCO Logo" />
    </a>
    {
      !isMaintenanceMode && (
        <>
          <nav class="pointer-events-none md:pointer-events-auto hidden md:block">
            <div class="flex gap-4">
              {menuItems.map((menuItem) => (
                <HeaderLink href={menuItem.slug}>
                  <>
                    <span class="icon" set:html={menuItem.icon} />
                    <span>{menuItem.label}</span>
                  </>
                </HeaderLink>
              ))}
            </div>
          </nav>
          <nav class="md:hidden md:pointer-events-none">
            <button
              type="button"
              class="open-btn inline-flex gap-2 items-center px-5 h-10 justify-center rounded-full md:hidden bg-neutral-100"
            >
              <span class="sr-only">Hauptmenü öffnen</span>
              <svg
                class="w-5 h-5"
                aria-hidden="true"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 17 14"
              >
                <path
                  stroke="currentColor"
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  stroke-width="2"
                  d="M1 1h15M1 7h15M1 13h15"
                />
              </svg>
              <span class="font-semibold">Menü</span>
            </button>
          </nav>
        </>
      )
    }

    <dialog
      class="mobile-menu md:pointer-events-none md:hidden bg-neutral-200 text-right top-0 right-0 w-[75vw] p-4 fixed h-full"
      inert="true"
    >
      <nav>
        <div class="flex flex-col gap-4 text-right justify-end">
          <button
            type="button"
            class="close-btn inline-flex gap-2 items-center px-5 h-10 justify-start self-start rounded-full md:hidden bg-neutral-50"
          >
            <span class="sr-only">Hauptmenü schließen</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="24"
              height="24"
              viewBox="0 0 256 256"
              ><path
                fill="currentColor"
                d="M208.49 191.51a12 12 0 0 1-17 17L128 145l-63.51 63.49a12 12 0 0 1-17-17L111 128L47.51 64.49a12 12 0 0 1 17-17L128 111l63.51-63.52a12 12 0 0 1 17 17L145 128Z"
              ></path></svg
            >
          </button>
          {
            menuItems.map((menuItem) => (
              <HeaderLink href={menuItem.slug}>
                <span class="icon" set:html={menuItem.icon} />
                &nbsp;<span>{menuItem.label}</span>
              </HeaderLink>
            ))
          }
        </div>
      </nav>
    </dialog>
  </div>
</header>
<style>
  header {
    @apply bg-white shadow-md sticky top-0 z-40;
    grid-area: header;
  }
  .wrapper {
    @apply container mx-auto px-4 py-2 flex justify-between items-center;
  }
  h2 {
    margin: 0.5em 0;
  }
  .icon svg {
    @apply block w-5 h-5;
  }
  .mobile-menu {
  }
  .mobile-menu--open {
  }
  :where(dialog) {
    display: block;
    max-width: none;
    max-height: none;
    margin: 0;
    margin-left: auto;
    will-change: transform, opacity;
    box-shadow:
      0px 0px 24px 4px rgba(0, 0, 0, 0.5),
      0px 0px 0px 100vw rgba(0, 0, 0, 0.5);
    transform: translate3d(100%, 0, 0);
    pointer-events: none;
    opacity: 0;
    transition: all 0.25s ease-in-out;
  }
  dialog[open] {
    pointer-events: inherit;
    transform: translate3d(0, 0, 0);
    opacity: 1;
  }
</style>

<script>
  const close = document.querySelector(".close-btn");
  const open = document.querySelector(".open-btn");
  const dialog = document.querySelector("dialog");
  open?.addEventListener("click", () => {
    dialog?.removeAttribute("inert");
    dialog?.showModal();
  });
  close?.addEventListener("click", () => {
    dialog?.close();
    dialog?.setAttribute("inert", "true");
  });
</script>
