---
import { getCollection } from "astro:content";
import HpStage from "../components/HpStage.astro";
import App from "../layouts/App.astro";
import HpCard from "../components/HpCard.astro";
import BadgeMini from "../components/BadgeMini.astro";
import FormattedDate from "../components/FormattedDate.astro";
import EventsSection from "../components/EventsSection.astro";
import EventBanner from "../components/EventBanner.astro";
import allshortevents from "../data/shortevents.json";

const posts = (await getCollection('start')).sort(
	(a, b) => a.data.order.valueOf() - b.data.order.valueOf()
);

const pastEvents = (await getCollection("berichte")).sort(
  (a, b) => a.data.eventDate.valueOf() - b.data.eventDate.valueOf(),
).reverse();

const now = new Date().setHours(0, 0, 0, 0);

const dateInPast = (date: Date) =>
  date.setHours(0, 0, 0, 0) >= now;

// TODO Events + News
const events = (await getCollection('veranstaltungen')).filter((ev) => dateInPast(ev.data.eventDate)).sort(
	(a, b) => a.data.eventDate.valueOf() - b.data.eventDate.valueOf()
);

const shortevents = allshortevents.geplant.filter((ev) => dateInPast(new Date(ev.date))).sort(
	(a, b) => new Date(a.date).valueOf() -  new Date(b.date).valueOf()
)

// Featured Event - bevorzugt Events mit featured: true, sonst erstes Event mit CTA
const featuredEvent = events.find(event => event.data.featured) || events.find(event => event.data.cta);
const regularEvents = featuredEvent ? events.filter(event => event.slug !== featuredEvent.slug) : events;
---

<App>
  <HpStage />
  <div class="main container grid gap-4 mx-auto p-4 overflow-hidden">

	 <!-- Berichte  -->
	 <aside class="side1">
		<HpCard>
			<div class="flex gap-2 justify-between items-center" slot="title">
				<h2 class="font-bold">Berichte</h2>
				<a class="text-xs text-center font-semibold inline-flex gap-2 items-center py-2 px-4 justify-center rounded-full bg-slate-100 hover:bg-slate-300" href="/veranstaltungen/" title="Alle Veranstaltungen anzeigen">Alle Berichte                     <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 256 256"><path fill="currentColor" d="m224.49 136.49l-72 72a12 12 0 0 1-17-17L187 140H40a12 12 0 0 1 0-24h147l-51.49-51.52a12 12 0 0 1 17-17l72 72a12 12 0 0 1-.02 17.01Z"/></svg>                  </span>
				</a>
			</div>
				<ul class="whitespace-nowrap">
					{
						pastEvents.slice(0,1).map((event) => (
							<li>
								<a href={`/berichte/${event.slug}/`} title={event.data.title} class="inline-flex flex-row gap-2 overflow-hidden max-w-full block py-2">
									 {/* <div>
										<BadgeMini highlight>
											<span class="font-semibold">NEU</span>
										</BadgeMini>
									</div> */}
									
										{/* <BadgeMini>
											<span class="font-semibold"><span class="day">{event.data.eventDate.toLocaleDateString("de-DE", { weekday: 'short' })},</span><span><FormattedDate date={event.data.eventDate} /></span></span>
										</BadgeMini>
									
									 */}
									<span class="underline underline-offset-2 decoration-slate-300 hover:decoration-slate-500 overflow-hidden text-ellipsis">{event.data.title}</span>
								</a>
							</li>
						))
					}
				</ul>
		</HpCard>
	</aside>
	<!-- / Berichte  -->
	 
	<!--  Veranstaltungen -->
	<aside class="side2">
		<HpCard>
			<div class="flex gap-2 justify-between items-center" slot="title">
				<h2 class="font-bold">Veranstaltungen</h2>
				<a class="text-xs text-center font-semibold inline-flex gap-2 items-center py-2 px-4 justify-center rounded-full bg-slate-100 hover:bg-slate-300" href="/veranstaltungen/" title="Alle Veranstaltungen anzeigen">Alle Termine                     <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 256 256"><path fill="currentColor" d="m224.49 136.49l-72 72a12 12 0 0 1-17-17L187 140H40a12 12 0 0 1 0-24h147l-51.49-51.52a12 12 0 0 1 17-17l72 72a12 12 0 0 1-.02 17.01Z"/></svg>                  </span>
				</a>
			</div>
			{
				events.length > 0 && (
					<ul class="">
						{
							events.map((event) => (
							<li>
								<a href={`/veranstaltungen/${event.slug}/`} title={event.data.title} class="inline-flex flex-row items-start gap-2 overflow-hidden max-w-full block py-2">
									<BadgeMini>
										<span class="font-semibold whitespace-nowrap"><span class="day">{event.data.eventDate.toLocaleDateString("de-DE", { weekday: 'short' })},</span><span><FormattedDate date={event.data.eventDate} /></span></span>
									</BadgeMini>
									<span class="underline underline-offset-2 decoration-slate-300 hover:decoration-slate-500 overflow-hidden text-ellipsis">{event.data.title}</span>
								</a>
							</li>
						))
						}
					</ul>
				)
			}	
			{
				shortevents.length > 0 && (
					<ul class="whitespace-nowrap">
						{
							shortevents.slice(0,2).map((event) => (
							<li>
								<div class="inline-flex flex-row gap-2 overflow-hidden max-w-full block py-2">
									<BadgeMini>
										<span class="font-semibold"><span class="day">{new Date(event.date).toLocaleDateString("de-DE", { weekday: 'short' })},</span><span><FormattedDate date={new Date(event.date)} /></span></span>
									</BadgeMini>
									<span class="overflow-hidden text-ellipsis">{event.title}</span>
									{/* <BadgeMini highlight>
											<span class="font-semibold">NEU</span>
										</BadgeMini> */}
								</div>
							</li>
						))
						}
					</ul>
				)
			}	
			{(!shortevents.length && !events.length) && (
				<p class="py-2 overflow-hidden text-ellipsis">Aktuell keine Veranstaltungen geplant</p>
			)}
		</HpCard>
	</aside>
	<!-- /  Veranstaltungen -->
	<main class="content prose pb-4">
		{
			featuredEvent && (
				<section class="not-prose mb-8">
					<EventBanner event={featuredEvent} highlight={true} />
				</section>
			)
		}
		{
			regularEvents.length > 0 && (
				<section class="not-prose">
					<EventsSection data={regularEvents} />
				  </section>

			)
		}
<!-- 		
		<h1>Coletion site settings:</h1>
		<h3>startseite</h3>
		<ul>
			<li>Generell der Title</li>
			<li>title in der Bühne</li>
			<li>Aktuelles (datum und richtext)</li>
		</ul>
		<h3>Öffnungszeiten</h3>
		<ul>
			<li>Richtext ul LIs</li>
		</ul>
		<h3>Kontakt</h3>
	<p>Kommt in Sportheim, Footer, Impressum</p>
		<ul>
			<li>anschrift, straße, plz, ort, tel, mail</li>
		</ul> -->

		{
			posts.map(async (post) => {
            	const { Content } = await post.render();
            	return (
						<Content />
				)
          	})
		}
	</main>


	 <!-- Öffnungszeiten  -->
	<aside class="side3">
		<HpCard>
			<div class="flex gap-2 justify-between items-center" slot="title">
			<h2 class="font-bold">Öffnungszeiten</h2>
			</div>
			<ul class="prose list-disc pl-4 list-outside">
				<li class="">
					jeden Sonntag ab 18:30 Uhr 
				</li>
				<li class="">
					jeden 1. Freitag im Monat ab 19:30 Uhr (ohne Gewähr)
				</li>
			</ul>
		</HpCard>
	</aside>
	<!-- / Öffnungszeiten  -->
  </div>
</App> 

<style>
	.day {
		display: inline-block;
		width: 3ch;
	}
	@media (max-width:767px) {
		.main {
			grid-area: main;
			display: flex;
			flex-direction: column;
		}
	}
	@media (min-width: 768px) {
		.main {
			grid-area: main;
			grid-template-areas:
			  "content side1"
			  "content side2"
			  "content side3";
			  grid-template-columns: minmax(0, 6fr) minmax(0, 4fr);
			grid-template-rows: auto auto 1fr;
		}
		.content {
			grid-area: content;
		}
		.side1 {
			grid-area: side1;
		}
		.side2 {
			grid-area: side2;
		}
		.side3 {
			grid-area: side3;
		}
	}
		
	@media (min-width: 1280px) {
		.main {
			grid-template-columns: minmax(0, 4fr) minmax(0, 2fr);
		}
	}
</style>